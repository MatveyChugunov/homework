3)
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace _13._03._2025
{
    class ex3
    {
        static void Main(string[] args)
        {
            Stack<int> stack = new Stack<int>(); // принцип стека: первым зашел последним вышел
            stack.Push(1); // поэтому вывелся перевернутым
            stack.Push(2);
            stack.Push(3);
            stack.Push(4);
            stack.Push(5);
            foreach (var item in stack)
            {
                Console.Write(item);
            }
        }
    }
}
--------------------------------------------------------------------------------------
4)
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace _13._03._2025
{
    class ex4
    {
        static void Main(string[] args)
        {
            Queue<int> queue = new Queue<int>(); //принцип очереди: первым зашел первым вышел
            queue.Enqueue(1);
            queue.Enqueue(2);
            queue.Enqueue(3);
            queue.Enqueue(4);
            queue.Enqueue(5);
            foreach (var item in queue)
            {
                Console.Write(item);
            }
        }
    }
}
----------------------------------------------------------------------------------------
5)
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace _13._03._2025
{
    class ex5
    {
        static void Main(string[] args)
        {
            Dictionary<char, char> dict = new Dictionary<char, char>(); //словарь
            dict.Add('(', ')');
            dict.Add('[', ']');
            dict.Add('{', '}');

            Stack<char> stack = new Stack<char>();// создание стека

            #region заполнение_стека
            Console.WriteLine("Введите размер массива: ");


            int a = int.Parse(Console.ReadLine());

            Console.WriteLine("Введите последовательность из скобок: ");

            for (int i = 0; i < a; i++)
            {
                stack.Push(char.Parse(Console.ReadLine()));
            }
            #endregion

            char[] arr = stack.ToArray();

            if (isCorrect(arr, dict) == true) { // проверка на корректность
                Console.WriteLine("Correct");
            } else Console.WriteLine("Uncorrect");
        }

        public static bool isCorrect(char[] arr, Dictionary<char,char> dict)
        {
            int count = arr.Length;
            bool isCorrect = true;
            if (count % 2 == 0)
            {
                for (int i = 0; i < count/2; i++)
                {
                    if ((((arr[i] == dict.Values.ElementAt(0)) && arr[count - 1 - i] == dict.Keys.ElementAt(0)) || 
                        ((arr[i] == dict.Values.ElementAt(1)) && arr[count - 1 - i] == dict.Keys.ElementAt(1)) || 
                        ((arr[i] == dict.Values.ElementAt(2)) && arr[count - 1 - i] == dict.Keys.ElementAt(2))) && (isCorrect == true))
                    {
                        
                    }
                    else isCorrect = false;
                }
                return isCorrect;
            }
            else return false;
        }
    }
}
